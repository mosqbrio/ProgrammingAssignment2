library(dataset)
library(datasets)
data(iris)
$iris
?iris
iris
iris[Species]
iris$Species
iris$Species == 'virginica'
iris[iris$Species == 'virginica']
iris$Sepal.Length[iris$Species == 'virginica']
mean(iris$Sepal.Length[iris$Species == 'virginica'])
apply(iris, 1, mean)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
iris[, 1:4]
iris[, 1:3]
iris[, 1:2]
iris[, 1:2][1]
iris[, 1:2][[1]]
library(datasets)
data(mtcars)
?mtcars
mtcars
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mpg, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mpg, cyl, mean)
mtcars, tapply(mpg, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))?with
?with
?tapply
tapply(mtcars,mpg, cyl, mean)
tapply(mtcars,mpg,, mean)
tapply(mtcars, mean)
mtcars
mtcars[1]
?mtcrs
?mtcars
mtcars
mtcars$cyk
mtcars$cyl
mtcars$cyl==4
mtcars$hp[mtcars$cyl==4]
mean(mtcars$hp[mtcars$cyl==4])
mean(mtcars$hp[mtcars$cyl==4])-mean(mtcars$hp[mtcars$cyl==8])
abs(mean(mtcars$hp[mtcars$cyl==4])-mean(mtcars$hp[mtcars$cyl==8]))
debug(ls)
ls
ls()
ls()
tapply(mtcars$mpg, mtcars$cyl, mean)
matrx
?matrix
Q
Q
?matrix
matrix(1,2,3,4)
matrix(1,2,3)
matrix(1,2)
matrix(2,2
)
matrix(2,2)
matrix(1:42,2)
matrix(1:4,2,2)
c<-matrix(1:4,2,2)
solve(c)
solve(c) %*% c
solve(c)
qr.solve(c)
matrix(c(4,3,3,2),2,2)
q<-matrix(c(4,3,3,2),2,2)
qr.solve(q)
q<-matrix(c(4,3,3,2),2,2)
inv
?inv
setwd("~/Documents/Courses/R/Prog Assig 2")
source('InvMatrix.R')
makeCacheMatrix(matrix(c(1,2,3,4)2,2))
class(q)
source('InvMatrix.R')
makeCacheMatrix(matrix(c(1,2,3,4)2,2))
source('MeanExp.R')
makeVector()
makeVector(c(1,2,3,4))
get
makeVector(c(1,2,3,4))
source('MeanExp.R')
makeVector(c(1,2,3,4))
makeVector(5
)
makeVector(c(1,2,3,4))
makeVector$set
makeVector
makeVector()
makeVector
a<-makeVector(c(1,2,3,4))
a
a.get
a.get()
set(a)
makeVector.get
a$get
a$get()
source('InvMatrix.R')
m<- makeCacheMatrix(matrix(c(1,2,3,4),2,2))
source('InvMatrix.R')
m<- makeCacheMatrix(matrix(c(1,2,3,4),2,2))
m$get
m$get()
source('InvMatrix.R')
m<- makeCacheMatrix(matrix(c(1,2,3,4),2,2))
m$get()
m$get()
source('InvMatrix.R')
m<- makeCacheMatrix(matrix(c(1,2,3,4),2,2))
m$get()
a$get()
a$getmean
a$getmean()
m$setinv(solve(a$get()))
m$setinv(solve(m$get()))
a$getmean()
solve(m$get())
m$setinv(solve(m$get()))
m$getinv()
source('InvMatrix.R')
cacheSolve(matrix(c(1,2,3,4),2,2))
source('InvMatrix.R')
cacheSolve(matrix(c(1,2,3,4),2,2))
m<- makeCacheMatrix(matrix(c(1,2,3,4),2,2))
cacheSolve(matrix(c(1,2,3,4),2,2))
cacheSolve(matrix(c(1,2,3,4),2,2))
cacheSolve(matrix(c(1,2,3,5),2,2))
cacheSolve(matrix(c(1,2,3,4),2,2))
source('InvMatrix.R')
cacheSolve(matrix(c(1,2,3,4),2,2))
m<- makeCacheMatrix(matrix(c(1,2,3,4),2,2))
cacheSolve(matrix(c(1,2,3,4),2,2))
cacheSolve(m
)
cacheSolve(m)
cacheSolve(m)
m<- makeCacheMatrix(matrix(c(1,2,3,5),2,2))
cacheSolve(m)
cacheSolve(m)
source('MeanExp.R')
a<-makeVector(c(1,2,3,4))
cachemean(c(1,2,3,4))
cachemean(a
)
cachemean(a)
setwd("~/Documents/Courses/R/Prog Assig 2/ProgrammingAssignment2")
source('cachematrix.R')
a<-cache
source('cachematrix.R')
a<- makeCacheMatrix(matrix(c(1,2,3,4),2,2))
a$get
a$get()
a$getinv()
a$setinv(solve(a$get()))
cacheSolve(a)
a$setinv(NULL)
cacheSolve(a)
cacheSolve(a)
